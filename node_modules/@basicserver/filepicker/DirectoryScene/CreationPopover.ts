import { State } from '@frugal-ui/base';
import { updateLists } from '..';
import { Popover } from '@frugal-ui/base';
import { Button } from '@frugal-ui/base';
import { VStack } from '@frugal-ui/base';
import { Label } from '@frugal-ui/base';
import { Input } from '@frugal-ui/base';
import { TextInputCfg } from '@frugal-ui/base';
import { ButtonStyles } from '@frugal-ui/base';

export interface CreationPopoverCfg {
	typeName: string;
	iconName: string;
	creationFn: (newName: string) => Promise<any>;
}

export function CreationPopover(configuration: CreationPopoverCfg) {
	const { typeName, iconName, creationFn } = configuration;

	const isOpen = new State(false);
	const newName = new State('');

	async function create() {
		try {
			await creationFn(newName.value);
			newName.value = '';
		} catch {
			alert(`Failed to create ${typeName} "${name}"`);
		} finally {
			isOpen.value = false;
			updateLists();
		}
	}

	return Popover({
		isOpen: isOpen,
		accessibilityLabel: `create ${typeName}`,
		toggle: Button({
			accessibilityLabel: `create ${typeName}`,
			iconName: iconName,
			text: `Create ${typeName}`,
			action: () => (isOpen.value = !isOpen.value),
		}).cssWidth('100%'),
		content: VStack(
			Label(
				'Name',
				Input(new TextInputCfg(newName, 'Untitled'))
					.registerKeyboardShortcuts({ key: 'Enter', action: create })
			),
			Button({
				style: ButtonStyles.Primary,
				accessibilityLabel: `create ${typeName}`,
				text: `Create ${typeName}`,
				action: create,
			}),
		)
			.cssHeight('auto')
			.cssWidth('18rem')

			.useDefaultPadding()
			.useDefaultSpacing(),
	});
}
